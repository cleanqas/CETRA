
@{
    ViewBag.Title = "Index";
}

<style>
    html, body, .container-table {
        height: 100%;
    }

    .container-table {
        margin-top: 10px;
        display: table;
        width: 80%;
    }

    .vertical-center-row {
        display: table-cell;
        vertical-align: middle;
    }

    .modal-dialog {
        width: 90%;
    }

    .modal-footer-left {
        text-align: left;
    }

    .wide-input {
        max-width: 100%;
    }

    .dataTables_length, .dataTables_filter {
        display: none;
    }
</style>

<div class="container container-table">
    <div class="row vertical-center-row">
        <div>
            <div>
                <input type="hidden" id="uploadOperatorId" />
                <input type="hidden" id="uploadUploaderId" />
            </div>
            <table id="UploadsTable" class="display" style="width: 100%">
                <thead>
                    <tr>
                        <th>Upload ID</th>
                        <th>Date and Time</th>
                        <th>Bank</th>
                        <th>Branch</th>
                        <th>Process</th>
                    </tr>
                </thead>
            </table>
        </div>
        <hr />
        <h2>Uploads with unidentified payments</h2>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="datefilter" class="control-label">Filter Upload Date:</label>
                    <input type="text" name="datefilter" id="datefilter" class="form-control wide-input" />
                </div>
            </div>
        </div>
        <div>
            <table id="UnidentifiedUploadsTable" class="display" style="width: 100%">
                <thead>
                    <tr>
                        <th>Upload ID</th>
                        <th>Date and Time</th>
                        <th>Bank</th>
                        <th>Branch</th>
                        <th>Process</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@*Upload Data Modal*@
<div class="row">
    <div class="modal fade" id="uploaddata" tabindex="-1" role="dialog" aria-labelledby="UploadDataLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title" id="UploadDataLabel">Process Upload</h3>
                </div>
                <div class="modal-body">
                    <table id="UploadDataTable" class="display" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Branch Code</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Posting Code</th>
                                <th>Narration</th>
                                <th>Bank</th>
                                <th>Account Name</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">
                    <div class="row" id="approveRejectDiv">
                        <div class="col-md-6">
                            <a href="#" class="btn btn-danger" id="cancelApproveUpload">Reject</a>
                        </div>
                        <div class="col-md-6">
                            <a href="#" class="btn btn-primary" id="approveUpload" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Approving ... ">Approve</a>
                        </div>
                    </div>
                    <div class="row modal-footer-left" id="rejectReasonDiv">
                        <div class="form-group">
                            <label for="rejectReason" class="control-label">Reason for Reject:</label>
                            <input type="text" name="rejectreason" id="rejectreason" class="form-control wide-input" />
                        </div>
                        <div class="form-group">
                            <a href="#" class="btn btn-danger" id="submitReject" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Rejecting ...">Submit Reject</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*View and download unidentified payments*@
<div class="row">
    <div class="modal fade" id="unidentifieddata" tabindex="-1" role="dialog" aria-labelledby="UnidentifiedDataLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title" id="UnidentifiedDataLabel">Unidentified Payments</h3>
                </div>
                <div class="modal-body">
                    <table id="UnidentifiedDataTable" class="display" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Branch Code</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Posting Code</th>
                                <th>Narration</th>
                                <th>Bank</th>
                                <th>Account Name</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">

                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        var paymentData = {};
        var unidentifiedPaymentData = {};

        $(function () {

            console.log("1")

            $("#rejectReasonDiv").hide();

            console.log("starting")

            $("#UploadsTable").DataTable({
                columns: [
                    { data: "Id" },
                    { data: "UploadDate" },
                    { data: "BankName" },
                    { data: "BranchCode" },
                    {
                        render: function (data, type, full, meta) {
                            return '<a class="btn btn-default" onClick="openModal(\'' + full.Id + '\', \'' + full.UploaderId + '\', \'' + full.OperatorId + '\')">Process</a>'
                        }
                    }
                ],
                ajax: {
                    url: '/BranchVerifier/GetAllPendingVerificationBranchUploads',
                    method: 'POST',
                    data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), branchId: '@ViewBag.UserBranch' }
                }
            });

            var unitable = $("#UnidentifiedUploadsTable").DataTable({
                columns: [
                    { data: "Id" },
                    { data: "UploadDate" },
                    { data: "BankName" },
                    { data: "BranchCode" },
                    {
                        render: function (data, type, full, meta) {
                            return '<a class="btn btn-default" onClick="openUnidentifiedModal(\'' + full.Id + '\', \'' + full.UploaderId + '\', \'' + full.OperatorId + '\')">Process</a>'
                        }
                    }
                ],
                ajax: {
                    url: '/BranchVerifier/UnidentifiedBranchUploads',
                    method: 'POST',
                    data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), branchId: '@ViewBag.UserBranch' }
                }
            });

            $('#datefilter').on('keyup', function () {
                unitable.column(1).search(this.value).draw();
            });

        });

        var openModal = function (uploadId, uploaderId, operatorId) {
            $("#uploadUploaderId").val(uploaderId);
            $("#uploadOperatorId").val(operatorId);
            $.ajax({
                type: 'POST',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), UploadId: '' + uploadId + '' },
                url: '/BranchVerifier/GetAllUploadDataDetail',
                success: function (data) {
                    console.log(data);
                    paymentData = data;
                }
            }).done(function () {
                $("#UploadDataTable").DataTable().clear().destroy();
                $("#UploadDataTable").DataTable({
                    data: paymentData,
                    columns: [
                        { data: "AccountNumber" },
                        { data: "BranchCode" },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (!full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        { data: "PostingCode" },
                        { data: "Narration" },
                        { data: "BankName" },
                        {
                            render: function (data, type, full, meta) {
                                if (full.TranID.endsWith("GL")) {
                                    return '<p> GL Account </p>';
                                } else {
                                    return '<p>' + full.AccountName + '</p>'
                                }
                            }
                        }
                    ]
                });
            });
            $('#uploaddata').modal();
        };

        var openUnidentifiedModal = function (uploadId) {
            $.ajax({
                type: 'POST',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), UploadId: '' + uploadId + '' },
                url: '/BranchVerifier/UnindentifiedUploadDataDetail',
                success: function (data) {
                    console.log(data);
                    unidentifiedPaymentData = data;
                }
            }).done(function () {
                $("#UnidentifiedDataTable").DataTable().clear().destroy();
                $("#UnidentifiedDataTable").DataTable({
                    data: unidentifiedPaymentData,
                    dom: 'Bfrtip',
                    buttons: [
                    {
                        extend: 'excelHtml5',
                        text: 'Download Excel',
                        filename: 'Unclaimed_' + unidentifiedPaymentData[0].BranchName + '_' + unidentifiedPaymentData[0].TranDate,
                        exportOptions: {
                            modifier: {
                                page: 'all'
                            }
                        }
                    }],
                    columns: [
                        { data: "AccountNumber" },
                        { data: "BranchCode" },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (!full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        { data: "PostingCode" },
                        { data: "Narration" },
                        { data: "BankName" },
                        {
                            render: function (data, type, full, meta) {
                                if (full.TranID.endsWith("GL")) {
                                    return '<p> GL Account </p>';
                                } else {
                                    if (full.AccountName == null) {
                                        return '<p></p>'
                                    } else {
                                        return '<p>' + full.AccountName + '</p>'
                                    }
                                    
                                }
                            }
                        }
                    ]
                });
            });
            $('#unidentifieddata').modal();
        };

        $("#approveUpload").click(function (e) {
            $(this).button('loading');
            $.ajax({
                type: 'POST',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), UploadId: '' + paymentData[0].UploadId + '' },
                url: '/BranchVerifier/ApproveUpload',
                success: function (data) {
                    $('#submitReject').button('reset');
                    $('#uploaddata').modal('hide');
                    $('#confirmationModal').modal();
                    $('#notification').text('Payment Data Approved');
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error Occured, ' + xhr.responseText);
                }
            })
        });

        $("#cancelApproveUpload").click(function (e) {
            $("#approveRejectDiv").hide();
            $("#rejectReasonDiv").show();
        });

        $("#submitReject").click(function (e) {
            $(this).button('loading');
            var _data = {
                __RequestVerificationToken: helpers.getAntiForgeryToken(),
                UploadId: paymentData[0].UploadId,
                UploaderId: $("#uploadUploaderId").val(),
                OperatorId: $("#uploadOperatorId").val(),
                RejectReason: $("#rejectreason").val()
            }
            $.ajax({
                type: 'POST',
                data: _data,
                url: '/BranchVerifier/RejectUpload',
                success: function (data) {
                    $('#uploadNewFile').button('reset');
                    $('#uploaddata').modal('hide');
                    $('#confirmationModal').modal();
                    $('#notification').text('Payment Data Rejected');
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error Occured, ' + xhr.responseText);
                }
            })
        });

        $('#uploaddata').on('hidden.bs.modal', function (e) {
            console.log('closing modal');
            $("#approveRejectDiv").show();
            $("#rejectReasonDiv").hide();
        });

        $('#confirmationModal').on('hide.bs.modal', function (e) {
            location.reload();
        });

    </script>
}