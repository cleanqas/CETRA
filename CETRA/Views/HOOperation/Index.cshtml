@{
    ViewBag.Title = "Index";
}

<style>
    html, body, .container-table {
        height: 100%;
    }

    .container-table {
        margin-top: 10px;
        display: table;
        width: 80%;
    }

    .vertical-center-row {
        display: table-cell;
        vertical-align: middle;
    }

    .modal-dialog {
        width: 90%;
    }

    .dataTables_length, .dataTables_filter {
        display: none;
    }
</style>

<div class="container container-table">
    <div class="row vertical-center-row">
        <div class="col-md-6">
            <div class="well form-horizontal">
                <div class="form-group">
                    <label class="control-label col-md-4">&nbsp;</label>
                    <div class="col-md-8">
                        <a class="btn btn-default" data-toggle="modal" href="#uploader">Upload Payment File &raquo;</a>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <table id="UploadsTable" class="display" style="width: 100%">
                <thead>
                    <tr>
                        <td>Id</td>
                        <td>UploadDate</td>
                        <th>Bank</th>
                        <th>Branch</th>
                        <td>Process</td>
                    </tr>
                </thead>
            </table>
        </div>
        <hr />
        <h2>Uploads with unidentified payments</h2>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="datefilter" class="control-label">Filter Upload Date:</label>
                    <input type="text" name="datefilter" id="datefilter" class="form-control wide-input" />
                </div>
            </div>
        </div>
        <div>
            <table id="UnidentifiedUploadsTable" class="display" style="width: 100%">
                <thead>
                    <tr>
                        <td>Id</td>
                        <td>UploadDate</td>
                        <th>Bank</th>
                        <th>Branch</th>
                        <td>Process</td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@*Upload Modal*@
<div class="row">
    <div class="modal fade" id="uploader" tabindex="-1" role="dialog" aria-labelledby="UploaderLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title" id="UploaderLabel">Upload Payment File</h3>
                </div>
                <div class="modal-body">
                    <form enctype="multipart/form-data" id="uploadForm">
                        <div class="form-group">
                            <label for="paymentfile" class="control-label">Payment File:</label>
                            <input type="file" name="paymentfile" id="paymentfile" placeholder="Payment File" required class="form-control" accept="csv" />
                        </div>
                        <div class="form-group">
                            <label for="bank_upload" class="control-label">Bank:</label>
                            <select name="bank_upload" id="bank_upload" required class="form-control">
                                <optgroup label="Select Bank"></optgroup>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="bank_glaccount" class="control-label">GL Account:</label>
                            <select name="bank_glaccount" id="bank_glaccount" required class="form-control" disabled>
                                <optgroup label="Select GLAccount"></optgroup>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="branch_upload" class="control-label">Branch:</label>
                            <select name="branch_upload" id="branch_upload" required class="form-control">
                                <optgroup label="Select Branch"></optgroup>
                            </select>
                        </div>
                        <div class="form-group">
                            <button class="btn btn-primary" type="button" id="uploadNewFile" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Processing File">Upload File </button>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
</div>

@*Upload Data Modal*@
<div class="row">
    <div class="modal fade" id="uploaddata" tabindex="-1" role="dialog" aria-labelledby="UploadDataLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title" id="UploadDataLabel">Process Upload</h3>
                </div>
                <div class="modal-body">
                    <table id="UploadDataTable" class="display" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Branch Code</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Posting Code</th>
                                <th>Narration</th>
                                @*<th>Bank</th>
                                    <th>Account Name</th>*@
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="markAsProcesed" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Processing...">Mark As Processed</a>
                </div>
            </div>
        </div>
    </div>
</div>

@*Unindentified Data Modal*@
<div class="row">
    <div class="modal fade" id="unidentifieddata" tabindex="-1" role="dialog" aria-labelledby="UnidentifiedDataLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title" id="UnidentifiedDataLabel">Unindentified Payments</h3>
                </div>
                <div class="modal-body">
                    <table id="UnidentifiedDataTable" class="display" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Branch Code</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>Posting Code</th>
                                <th>Narration</th>
                                <th>Bank</th>
                                <th>Account Name</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
</div>

@*Upload Data Modal*@
<div class="row">
    <div class="modal fade" id="ConfirmUploadDataModal" tabindex="-1" role="dialog" aria-labelledby="ConfirmUploadDataLabel" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close"><span aria-hidden="true">&times;</span></button>
                    <h3 class="modal-title" id="ConfirmUploadDataLabel">Process Upload</h3>
                </div>
                <div class="modal-body">
                    <table id="ConfirmUploadDataTable" class="display" style="width: 100%">
                        <thead>
                            <tr>
                                <th>Account Number</th>
                                <th>Debit</th>
                                <th>Credit</th>
                                <th>PostingCode</th>
                                <th>Narration</th>
                                <th>Account Name</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-primary" id="confirmUploadData" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Processing ...">Submit</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        var paymentData = {};
        var uploadPaymentData = {};
        var banks = {};
        var accounts = {};
        var branches = {};
        var unidentifiedPaymentData = {};

        $(function () {
            helpers.getData("/SetUp/GetAllBranches", function (data) {
                helpers.buildDropdown(data, $('#branch_upload'), 'Select Branch', 'BranchCode');
                branches = data;
            });

            helpers.getData("/SetUp/GetAllBanks", function (data) {
                helpers.buildDropdown(data, $('#bank_upload'), 'Select Bank');
                banks = data;
            });

            $("#UploadsTable").DataTable({
                columns: [
                    { data: "Id" },
                    { data: "UploadDate" },
                    { data: "BankName" },
                    { data: "BranchCode" },
                    {
                        render: function (data, type, full, meta) {
                            return '<a class="btn btn-default" onClick="openModal(\'' + full.Id + '\')">Process</a>'
                        }
                    }
                ],
                ajax: {
                    url: '/HOOperation/GetAllProcessedUploads',
                    method: 'POST',
                    data: { __RequestVerificationToken: helpers.getAntiForgeryToken() }
                }
            });

            var unitable = $("#UnidentifiedUploadsTable").DataTable({
                columns: [
                    { data: "Id" },
                    { data: "UploadDate" },
                    { data: "BankName" },
                    { data: "BranchCode" },
                    {
                        render: function (data, type, full, meta) {
                            return '<a class="btn btn-default" onClick="openUnidentifiedModal(\'' + full.Id + '\', \'' + full.UploaderId + '\', \'' + full.OperatorId + '\')">Process</a>'
                        }
                    }
                ],
                ajax: {
                    url: '/HOOperation/GetUnidentifiedUploads',
                    method: 'POST',
                    data: { __RequestVerificationToken: helpers.getAntiForgeryToken() }
                }
            });

            $('#datefilter').on('keyup', function () {
                unitable.column(1).search(this.value).draw();
            });

        });

        var updateNarration = function (narration, uploadDataId) {
            $.each(uploadPaymentData.uploadData, function (i, v) {
                if (v.Id == uploadDataId) {
                    v.Narration = narration;
                    return false;
                }
            });
        }

        var searchBranchName = function (branchCode) {
            console.log(branches);
            console.log(branchCode);
            var branchName = "";
            $.each(branches, function (i, v) {
                if (v.BranchCode == branchCode) {
                    branchName = v.Name;
                    return false;
                }
            });
            return branchName;
        }

        var searchAccount = function (acctNumber, uploadDataId) {

            console.log(accounts)
            console.log(acctNumber)

            $.each(uploadPaymentData.uploadData, function (i, v) {
                if (v.Id == uploadDataId) {
                    v.AccountNumber = acctNumber;
                    return false;
                }
            });
            var acn = "";
            $.each(accounts, function (i, v) {
                if (v.AccountNumber == acctNumber) {
                    acn = v.AccountName;
                    $.each(uploadPaymentData.uploadData, function (j, vl) {
                        if (vl.AccountNumber == v.AccountNumber) {
                            vl.AccountName = v.AccountName;
                            return false;
                        }
                    });
                    return false;
                }
            });
            if (acn == "") {
                alert("Invalid account number");
                $('#acctNumber_' + uploadDataId).val(acn)
            } else {
                $('#acctName_' + uploadDataId).text(acn);
            }
        };

        var completeUploadModal = function (bankId, branchId, bankName, branchCode) {

            accounts = uploadPaymentData.accounts;

            var paymentData = $.grep(uploadPaymentData.uploadData, function (v) {
                return v.TranID.endsWith("CL");
            });

            $('#ConfirmUploadDataLabel').text("Complete Upload for Branch: " + searchBranchName(branchCode) + " in Bank: " + bankName);

            $("#ConfirmUploadDataTable").DataTable().clear().destroy();
            $("#ConfirmUploadDataTable").DataTable({
                data: paymentData,
                columns: [
                        {
                            render: function (data, type, full, meta) {
                                if (full.TranID.endsWith("GL")) {
                                    return '<p>' + full.AccountNumber + '</p>';
                                } else {
                                    return '<input type="text" placeholder="Account Number" value="' + full.AccountNumber + '" class="form-control" name="acctNumber_' + full.Id + '" id="acctNumber_' + full.Id + '" onChange="searchAccount(this.value, \'' + full.Id + '\')"/>'
                                }
                            }
                        },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>'
                                } else {
                                    return '<p></p>'
                                }

                            }
                        },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (!full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>'
                                } else {
                                    return '<p></p>'
                                }

                            }
                        },
                         { data: "PostingCode" },
                         {
                             render: function (data, type, full, meta) {
                                 if (full.TranID.endsWith("GL")) {
                                     return '<p>' + full.Narration + '</p>';
                                 } else {
                                     return '<input type="text" placeholder="Narration" class="form-control" value="' + full.Narration + '" name="narration_' + full.Id + '" id="narration_' + full.Id + '" onChange="updateNarration(this.value, \'' + full.Id + '\')"/>'
                                 }
                             }
                         },
                        {
                            render: function (data, type, full, meta) {
                                if (full.TranID.endsWith("GL")) {
                                    return '<p> GL Account </p>';
                                } else {
                                    return '<div name="acctName_' + full.Id + '" id="acctName_' + full.Id + '">' + full.AccountName + '</div>'
                                }
                            }
                        }
                ]
            });
            $('#uploader').modal('hide');
            $('#ConfirmUploadDataModal').modal();
        };

        $('#confirmUploadData').click(function (e) {
            $(this).button('loading');

            var updates = [];

            $.each(uploadPaymentData.uploadData, function (i, v) {
                updates.push({ Narration: v.Narration, Amount: v.Amount, AccountNumber: v.AccountNumber, PostingCode: v.PostingCode, Debit1Credit0: v.Debit1Credit0, TranID: v.TranID, TranDate: v.TranDate });
            });

            $.ajax({
                type: 'POST',
                url: '/HOOperation/ConfirmUpload',
                contentType: 'application/json; charset=utf-8',
                datatype: "json",
                data: JSON.stringify({ model: { BankId: $('#bank_upload').val(), BranchId: $('#branch_upload').val(), PData: updates } }),
                success: function (data) {
                    console.log(data);
                    $('#ConfirmUploadDataModal').modal('hide');
                    $('#confirmationModal').modal();
                    $('#notification').text('Upload Submitted Successfully');
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error Occured, ' + xhr.responseText);
                },
                complete: function (data) {
                    $('#confirmUploadData').button('reset');
                }
            });

        });

        var openModal = function (uploadId) {
            $("#UploadDataTable").DataTable().clear().destroy();
            $.ajax({
                type: 'POST',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), UploadId: '' + uploadId + '' },
                url: '/HOOperation/GetAllUploadDataDetail',
                success: function (data) {
                    paymentData = data;
                }
            }).done(function () {

                $("#UploadDataTable").DataTable({
                    data: paymentData,
                    dom: 'Bfrtip',
                    buttons: [
                    {
                        extend: 'excelHtml5',
                        text: 'Download Excel',
                        filename: 'PaymentData_' + uploadId,
                        exportOptions: {
                            modifier: {
                                page: 'all'
                            }
                        }
                    }],
                    columns: [
                        { data: "AccountNumber" },
                        { data: "BranchCode" },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }

                            }
                        },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (!full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        { data: "PostingCode" },
                        { data: "Narration" },
                        //{ data: "BankName" },
                        //{
                        //    render: function (data, type, full, meta) {
                        //        if (full.TranID.endsWith("GL")) {
                        //            return '<p> GL Account </p>';
                        //        } else {
                        //            if (full.AccountName == null) {
                        //                return '<p></p>'
                        //            } else {
                        //                return '<p>' + full.AccountName + '</p>'
                        //            }

                        //        }
                        //    }
                        //}
                    ]
                });
            });
            $('#uploaddata').modal();
        };

        var openUnidentifiedModal = function (uploadId) {
            console.log($("#UnidentifiedDataTable"));
            $("#UnidentifiedDataTable").DataTable().clear().destroy();
            $.ajax({
                type: 'POST',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), UploadId: '' + uploadId + '' },
                url: '/HOOperation/UnindentifiedUploadDataDetail',
                success: function (data) {
                    unidentifiedPaymentData = data;
                }
            }).done(function () {                
                $("#UnidentifiedDataTable").DataTable({
                    data: unidentifiedPaymentData,
                    dom: 'Bfrtip',
                    buttons: [
                    {
                        extend: 'excelHtml5',
                        text: 'Download Excel',
                        filename: 'Unclaimed_' + unidentifiedPaymentData[0].BranchName + '_' + unidentifiedPaymentData[0].TranDate,
                        exportOptions: {
                            modifier: {
                                page: 'all'
                            }
                        }
                    }],
                    columns: [
                        { data: "AccountNumber" },
                        { data: "BranchCode" },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        {
                            render: function (data, type, full, meta) {
                                var sym = "";
                                if (!full.Debit1Credit0) {
                                    return '<p>' + full.Amount + '</p>';
                                } else {
                                    return '<p></p>';
                                }
                            }
                        },
                        { data: "PostingCode" },
                        { data: "Narration" },
                        { data: "BankName" },
                        { data: "AccountName" }
                    ]
                });
            });
            $('#unidentifieddata').modal();
        };

        $('#markAsProcesed').click(function (e) {
            $(this).button('loading');
            $.ajax({
                type: 'POST',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), UploadId: '' + paymentData[0].UploadId + '' },
                url: '/HOOperation/MarkUploadAsProcessed',
                success: function (data) {
                    console.log(data);
                    $('#uploaddata').modal('hide');
                    $('#confirmationModal').modal();
                    $('#notification').text('Upload Marked As Processed');
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error Occured, ' + xhr.responseText);
                },
                complete: function (data) {
                    $('#markAsProcesed').button('reset');
                }
            });
        });

        $('#uploadNewFile').click(function (e) {

            $(this).button('loading');

            var _data = new FormData();
            _data.append("__RequestVerificationToken", helpers.getAntiForgeryToken());
            _data.append("BankId", $('#bank_upload').val());
            _data.append("BranchId", $('#branch_upload').val());
            _data.append("GLAccount", $('#bank_glaccount').val());
            _data.append("PaymentFile", $('#file').context.forms["uploadForm"][0].files[0])

            console.log(_data);
            $.ajax({
                type: 'POST',
                xhr: function () {
                    var uXhr = $.ajaxSettings.xhr();
                    if (uXhr.upload) {
                        console.log(uXhr);
                    }
                    return uXhr;
                },
                data: _data,
                contentType: false,
                processData: false,
                url: '/HOOPeration/Upload',
                success: function (data) {
                    //console.log(data);
                    uploadPaymentData = data;
                    completeUploadModal($('#bank_upload').val(), $('#branch_upload').val(), $("#bank_upload :selected").text(), $("#branch_upload :selected").text())
                    //$('#uploader').modal('hide');
                    //$('#confirmationModal').modal();
                    //$('#notification').text('File Upload Succesfully');
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Error Occured, ' + xhr.responseText);
                },
                complete: function (data) {
                    $('#uploadNewFile').button('reset');
                }
            });
        });

        $('#confirmationModal').on('hide.bs.modal', function (e) {
            console.log('closing notify');
            location.reload();
        });

        $('#bank_upload').on('change', function () {
            $('#bank_glaccount').attr('disabled', 'disabled');
            $.ajax({
                type: "POST",
                url: '/HOOperation/GetBankGLAccounts',
                data: { __RequestVerificationToken: helpers.getAntiForgeryToken(), BankId: $('#bank_upload').val() },
                contentType: 'application/x-www-form-urlencoded',
                success: function (data) {
                    helpers.buildDropdown(data, $('#bank_glaccount'), 'Select GLAccount', 'GLAccount', 'GLAccount');
                    $('#bank_glaccount').removeAttr('disabled');
                }
            });
        });
    </script>
}
